@using Vendr.DemoStore;
@using Vendr.DemoStore.Models;
@using Vendr.DemoStore.Web;
@inherits Umbraco.Web.Mvc.UmbracoViewPage<SearchViewModel>
@{
    var activeFacet = Request.QueryString["facet"] ?? "all";
}

<ul class="md:flex md:justify-between text-center py-2 border-b border-gray-300">
    @if (Model.Facets.ContainsKey("all"))
    {
        <li><a href="@(Request.Url.RemoveQueryStringParam("p").AddOrUpdateQueryStringParam("facet", "all"))" class="@(activeFacet == "all" ? "font-bold" : "")">All (@Model.Facets["all"].TotalItems)</a></li>
    }
    @foreach (var facet in Model.CategoryNames)
    {
        <li><a href="@(Request.Url.RemoveQueryStringParam("p").AddOrUpdateQueryStringParam("facet", facet.Key))" class="@(activeFacet == facet.Key ? "font-bold" : "")">@(Model.CategoryNames[facet.Key]) (@Model.Facets[facet.Key].TotalItems)</a></li>
    }
</ul>

@RenderFacet(activeFacet, Model.Facets[activeFacet])


@helper RenderFacet(string name, PagedResult<IPublishedContent> results)
{
    if (results.TotalItems > 0)
    {
        <div class="mt-6">
            @foreach (var item in results.Items.Select((x, i) => new { Result = x, Index = i }))
            {
                <div class="mt-4 @(item.Index > 0 ? "border-t border-gray-300 pt-4" : "")">
                    <h3 class="text-lg font-bold"><a href="@item.Result.Url" class="text-teal-400 hover:text-gray-800 hover:underline">@(item.Index + 1 + ((results.PageNumber - 1) * results.PageSize)).  @(item.Result.Name)</a></h3>
                    <p class="text-sm "><a href="@item.Result.Url" class="text-gray-500 hover:text-gray-800 hover:underline">@item.Result.Url</a></p>
                </div>
            }
        </div>

        @Html.Partial("Pagination", results.Cast<IPublishedContent, object>())
    }
    else
    {
        <h2 class="text-5xl font-bold text-center py-24 text-gray-300">No results found</h2>
    }
}